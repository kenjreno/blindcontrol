---
##
## https://www.mksmarthouse.com/products/blinds-control
##
substitutions:
  name: mkblinds
  friendly_name: "MK-Smarthouse Blinds"
  project_name: "kenjreno.blindcontroller"
  project_version: "0.0.1"
  
web_server:
  
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: true
  project:
    name: ${project_name}
    version: ${project_version}

esp8266:
  board: esp12e
  restore_from_flash: true

preferences:
  flash_write_interval: 1min
  
dashboard_import:
  package_import_url: github://kenjreno/blindcontrol/esphome/esp8266.yaml@main

packages:
 remote_package:
   url: https://github.com/kenjreno/blindcontrol
   files: [esphome/esp8266.yaml]
   refresh: 1s

# Sync time with Home Assistant.
time:
  - platform: homeassistant
    id: homeassistant_time
    
api:
ota:
improv_serial:
wifi:
  ap:
captive_portal:  
logger:

# globals:
#   - id: direction
#     type: bool
#     restore_value: True
#     initial_value: 'true'  # true for default (left/up), false for reversed

#   - id: fast_mode
#     type: bool
#     restore_value: True
#     initial_value: 'false'  # true for fast mode, false for slow mode    


# # Servo configuration
# output:
#   - platform: esp8266_pwm
#     id: mkblind_output_0
#     pin: GPIO13  # GPIO13 corresponds to D4 on the ESP-12E
#     frequency: 50 Hz

#   - platform: esp8266_pwm
#     id: mkblind_output_1
#     pin: GPIO14  # GPIO14 corresponds to D5 on the ESP-12E
#     frequency: 50 Hz

# # Servo component
# servo:
#   - id: mkblind_servo_0_fast
#     output: mkblind_output_0
#     min_level: 2.5%
#     max_level: 12.0%
#     # transition_length: 1s
#     # restore: true

#   - id: mkblind_servo_0_slow
#     output: mkblind_output_0
#     min_level: 2.5%
#     max_level: 12.0%
#     transition_length: 5s
#     # restore: true
    
#   - id: mkblind_servo_1_fast
#     output: mkblind_output_1
#     min_level: 2.5%
#     max_level: 12.0%
#     # transition_length: 1s
#     # restore: true

#   - id: mkblind_servo_1_slow
#     output: mkblind_output_1
#     min_level: 2.5%
#     max_level: 12.0%
#     transition_length: 5s
#     # restore: true

# number:
#   - platform: template
#     name: Position
#     min_value: 0
#     max_value: 100
#     step: 1
#     optimistic: true
#     set_action:
#       then:
#         - if:
#             condition:
#               lambda: 'return id(fast_mode);'
#             then:
#               - servo.write:
#                   id: mkblind_servo_0_fast
#                   level: !lambda 'return id(direction) ? ((x / 100.0) * 2.0 - 1.0) : (1.0 - (x / 100.0) * 2.0);'
#             else:
#               - servo.write:
#                   id: mkblind_servo_0_slow
#                   level: !lambda 'return id(direction) ? ((x / 100.0) * 2.0 - 1.0) : (1.0 - (x / 100.0) * 2.0);'
#         - cover.template.publish:
#             id: mkblind_blind
#             position: !lambda 'return x / 100.0;'

# cover:
#   - platform: template
#     name: Blinds
#     id: mkblind_blind
#     device_class: blind
#     open_action:
#       - logger.log: "Opening"
#       - cover.template.publish:
#           id: mkblind_blind
#           current_operation: OPENING
#       - if:
#           condition:
#             lambda: 'return id(fast_mode);'
#           then:
#             - servo.write:
#                 id: mkblind_servo_0_fast
#                 level: !lambda 'return id(direction) ? 1.0 : -1.0;'
#           else:
#             - servo.write:
#                 id: mkblind_servo_0_slow
#                 level: !lambda 'return id(direction) ? 1.0 : -1.0;'
#       - cover.template.publish:
#           id: mkblind_blind
#           state: OPEN
#           current_operation: IDLE

#     close_action:
#       - logger.log: "Closing"
#       - cover.template.publish:
#           id: mkblind_blind
#           position: 1.0
#           current_operation: CLOSING
#       - if:
#           condition:
#             lambda: 'return id(fast_mode);'
#           then:
#             - servo.write:
#                 id: mkblind_servo_0_fast
#                 level: !lambda 'return id(direction) ? -1.0 : 1.0;'
#           else:
#             - servo.write:
#                 id: mkblind_servo_0_slow
#                 level: !lambda 'return id(direction) ? -1.0 : 1.0;'
#       - cover.template.publish:
#           id: mkblind_blind
#           state: CLOSED
#           current_operation: IDLE

#     stop_action:
#       - logger.log: "Stopping"
#       - servo.detach:
#           id: mkblind_servo_0_fast
#       - servo.detach:
#           id: mkblind_servo_0_slow
#       - cover.template.publish:
#           id: mkblind_blind
#           current_operation: IDLE          

# sensor:
#   - platform: wifi_signal
#     name: "WiFi Signal"
#     update_interval: 60s
#     id: signalWgm
#   - platform: uptime
#     name: "Uptime"
#     update_interval: 60s    

# button:
#   - platform: restart
#     id: mkblind_restart
#     name: "Restart"

# text_sensor:
#   - platform: version
#     name: "Firmware Version"

# switch:
#   - platform: template
#     name: "Direction Control"
#     id: direction_switch
#     restore_mode: RESTORE_DEFAULT_OFF
#     entity_category: config
#     icon: "mdi:swap-horizontal"
#     lambda: |-
#       return id(direction);
#     turn_on_action:
#       - globals.set:
#           id: direction
#           value: 'true'
#     turn_off_action:
#       - globals.set:
#           id: direction
#           value: 'false'

#   - platform: template
#     name: "Fast Mode"
#     id: fast_slow_switch
#     restore_mode: RESTORE_DEFAULT_OFF
#     entity_category: config
#     icon: "mdi:rabbit"
#     lambda: |-
#       return id(fast_mode);
#     turn_on_action:
#       - globals.set:
#           id: fast_mode
#           value: 'true'
#     turn_off_action:
#       - globals.set:
#           id: fast_mode
#           value: 'false'
    
